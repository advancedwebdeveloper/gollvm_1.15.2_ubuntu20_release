# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.17)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget LLVMHello LLVMTestingSupport FileCheck llvm-PerfectShuffle count not yaml-bench BugpointPasses GoDumpSpecMacroTokenizer GoDumpSpecMacroParser llvm-godumpspec GoUnitTestUtils lli-child-target Bye TestPlugin gtest gtest_main)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target LLVMHello
add_library(LLVMHello MODULE IMPORTED)

# Create imported target LLVMTestingSupport
add_library(LLVMTestingSupport STATIC IMPORTED)

set_target_properties(LLVMTestingSupport PROPERTIES
  INTERFACE_LINK_LIBRARIES "LLVMSupport;\$<LINK_ONLY:gtest>"
)

# Create imported target FileCheck
add_executable(FileCheck IMPORTED)

# Create imported target llvm-PerfectShuffle
add_executable(llvm-PerfectShuffle IMPORTED)

# Create imported target count
add_executable(count IMPORTED)

# Create imported target not
add_executable(not IMPORTED)

# Create imported target yaml-bench
add_executable(yaml-bench IMPORTED)

# Create imported target BugpointPasses
add_library(BugpointPasses MODULE IMPORTED)

# Create imported target GoDumpSpecMacroTokenizer
add_library(GoDumpSpecMacroTokenizer STATIC IMPORTED)

# Create imported target GoDumpSpecMacroParser
add_library(GoDumpSpecMacroParser STATIC IMPORTED)

# Create imported target llvm-godumpspec
add_executable(llvm-godumpspec IMPORTED)

# Create imported target GoUnitTestUtils
add_library(GoUnitTestUtils STATIC IMPORTED)

# Create imported target lli-child-target
add_executable(lli-child-target IMPORTED)

# Create imported target Bye
add_library(Bye MODULE IMPORTED)

# Create imported target TestPlugin
add_library(TestPlugin MODULE IMPORTED)

# Create imported target gtest
add_library(gtest STATIC IMPORTED)

set_target_properties(gtest PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "GTEST_HAS_TR1_TUPLE=0"
  INTERFACE_COMPILE_OPTIONS "-Wno-suggest-override"
  INTERFACE_INCLUDE_DIRECTORIES "/home/oceanfish81/workarea/llvm-project/llvm/utils/unittest/googletest/include;/home/oceanfish81/workarea/llvm-project/llvm/utils/unittest/googlemock/include"
  INTERFACE_LINK_LIBRARIES "pthread;LLVMSupport"
)

# Create imported target gtest_main
add_library(gtest_main STATIC IMPORTED)

set_target_properties(gtest_main PROPERTIES
  INTERFACE_LINK_LIBRARIES "gtest;LLVMSupport"
)

# Import target "LLVMHello" for configuration "Release"
set_property(TARGET LLVMHello APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(LLVMHello PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELEASE ""
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/LLVMHello.so"
  IMPORTED_NO_SONAME_RELEASE "TRUE"
  )

# Import target "LLVMTestingSupport" for configuration "Release"
set_property(TARGET LLVMTestingSupport APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(LLVMTestingSupport PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libLLVMTestingSupport.a"
  )

# Import target "FileCheck" for configuration "Release"
set_property(TARGET FileCheck APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(FileCheck PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/FileCheck"
  )

# Import target "llvm-PerfectShuffle" for configuration "Release"
set_property(TARGET llvm-PerfectShuffle APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(llvm-PerfectShuffle PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/llvm-PerfectShuffle"
  )

# Import target "count" for configuration "Release"
set_property(TARGET count APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(count PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/count"
  )

# Import target "not" for configuration "Release"
set_property(TARGET not APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(not PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/not"
  )

# Import target "yaml-bench" for configuration "Release"
set_property(TARGET yaml-bench APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(yaml-bench PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/yaml-bench"
  )

# Import target "BugpointPasses" for configuration "Release"
set_property(TARGET BugpointPasses APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(BugpointPasses PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELEASE ""
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/BugpointPasses.so"
  IMPORTED_NO_SONAME_RELEASE "TRUE"
  )

# Import target "GoDumpSpecMacroTokenizer" for configuration "Release"
set_property(TARGET GoDumpSpecMacroTokenizer APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(GoDumpSpecMacroTokenizer PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libGoDumpSpecMacroTokenizer.a"
  )

# Import target "GoDumpSpecMacroParser" for configuration "Release"
set_property(TARGET GoDumpSpecMacroParser APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(GoDumpSpecMacroParser PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libGoDumpSpecMacroParser.a"
  )

# Import target "llvm-godumpspec" for configuration "Release"
set_property(TARGET llvm-godumpspec APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(llvm-godumpspec PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/llvm-godumpspec"
  )

# Import target "GoUnitTestUtils" for configuration "Release"
set_property(TARGET GoUnitTestUtils APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(GoUnitTestUtils PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libGoUnitTestUtils.a"
  )

# Import target "lli-child-target" for configuration "Release"
set_property(TARGET lli-child-target APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(lli-child-target PROPERTIES
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/bin/lli-child-target"
  )

# Import target "Bye" for configuration "Release"
set_property(TARGET Bye APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Bye PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELEASE ""
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/Bye.so"
  IMPORTED_NO_SONAME_RELEASE "TRUE"
  )

# Import target "TestPlugin" for configuration "Release"
set_property(TARGET TestPlugin APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(TestPlugin PROPERTIES
  IMPORTED_COMMON_LANGUAGE_RUNTIME_RELEASE ""
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/unittests/Passes/TestPlugin.so"
  IMPORTED_NO_SONAME_RELEASE "TRUE"
  )

# Import target "gtest" for configuration "Release"
set_property(TARGET gtest APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(gtest PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libgtest.a"
  )

# Import target "gtest_main" for configuration "Release"
set_property(TARGET gtest_main APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(gtest_main PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/oceanfish81/workarea/gollvm_1.15.2_ubuntu20_release/lib/libgtest_main.a"
  )

# Make sure the targets which have been exported in some other
# export set exist.
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
foreach(_target "LLVMSupport" )
  if(NOT TARGET "${_target}" )
    set(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets "${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets} ${_target}")
  endif()
endforeach()

if(DEFINED ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)
  if(CMAKE_FIND_PACKAGE_NAME)
    set( ${CMAKE_FIND_PACKAGE_NAME}_FOUND FALSE)
    set( ${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  else()
    message(FATAL_ERROR "The following imported targets are referenced, but are missing: ${${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets}")
  endif()
endif()
unset(${CMAKE_FIND_PACKAGE_NAME}_NOT_FOUND_MESSAGE_targets)

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
